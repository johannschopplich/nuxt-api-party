import { relative } from 'pathe'
import { addTemplate, createResolver, useLogger, useNuxt } from '@nuxt/kit'
import type { ConsolaInstance } from 'consola'

export const logger: ConsolaInstance = useLogger('nuxt-api-party')

export function extendTypes(
  module: string,
  template: (options: { typesPath: string }) => string | Promise<string>,
) {
  const nuxt = useNuxt()
  const { resolve } = createResolver(import.meta.url)

  addTemplate({
    filename: `module/${module}.d.ts`,
    getContents: async () => {
      const typesPath = relative(
        resolve(nuxt.options.rootDir, nuxt.options.buildDir, 'module'),
        resolve('runtime/types'),
      )
      const s = await template({ typesPath })
      return `
// Generated by ${module}
${s}`.trimStart()
    },
  })

  nuxt.hooks.hook('prepare:types', ({ references }) => {
    references.push({
      path: resolve(nuxt.options.buildDir, `module/${module}.d.ts`),
    })
  })
}
